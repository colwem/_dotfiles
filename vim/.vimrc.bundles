" Modeline and Notes {
" vim: set sw=4 ts=4 sts=4 et tw=78 foldmarker={,} spell:
" }

" Environment {

" Basics {
" set nocompatible        " Must be first line
" set background=dark     " Assume a dark background
" set noshellslash
"  }

" " Windows Compatible {
" " On Windows, also use '.vim' instead of 'vimfiles'; this makes synchronization
" " across (heterogeneous) systems easier.
" if has('win32') || has('win64')
    " "set runtimepath=$HOME/.vim,$VIM/vimfiles,$VIMRUNTIME,$VIM/vimfiles/after,$HOME/.vim/after

    " " Be nice and check for multi_byte even if the config requires
    " " multi_byte support most of the time
    " if has("multi_byte")
        " " Windows cmd.exe still uses cp850. If Windows ever moved to
        " " Powershell as the primary terminal, this would be utf-8
        " set termencoding=cp850
        " " Let Vim use utf-8 internally, because many scripts require this
        " set encoding=utf-8
        " setglobal fileencoding=utf-8
        " " Windows has traditionally used cp1252, so it's probably wise to
        " " fallback into cp1252 instead of eg. iso-8859-15.
        " " Newer Windows files might contain utf-8 or utf-16 LE so we might
        " " want to try them first.
        " set fileencodings=ucs-bom,utf-8,utf-16le,cp1252,iso-8859-15
    " endif
    " set rtp+=$HOME/vimfiles/bundle/vundle/
" endif
" " }

" " Setup Plug Support {
" " The next three lines ensure that the ~/.vim/bundle/ system works
" filetype off
" set rtp+=~/.vim/bundle/Vundle.vim
call plug#begin('~/.local/share/nvim/plugged')
" }

" }

" Plugs {


" Deps {
" " From here
Plug 'MarcWeber/vim-addon-mw-utils'
Plug 'tomtom/tlib_vim'
" if executable('ag')
  " " Plug 'mileszs/ack.vim'
  " " let g:ackprg = 'ag --nogroup --nocolor --column --smart-case'
" elseif executable('ack-grep')
   " let g:ackprg="ack-grep -H --nocolor --nogroup --column"
  " " Plug 'mileszs/ack.vim'
" elseif executable('ack')
  " " Plug 'mileszs/ack.vim'
" endif
" " }

" Plug 'othree/html5.vim'
" Plug 'mattn/webapi-vim'

" " stuff from before using vundle: ragtag, scratch, snipMate, surround

" "Plug 'tpope/vim-dispatch'
" "Plug 'plasticboy/vim-markdown'
" "Plug 'suan/vim-instant-markdown'
" Plug 'vim-pandoc/vim-pandoc'
" Plug 'vim-pandoc/vim-pandoc-syntax'
Plug 'kana/vim-submode' "allows creation of custom modes
" "Plug 'dahu/vimple' Provides commands for more easily dealing with ex-commands that print messages

" " Colorscheme {
Plug 'tomasr/molokai'
" " }

" " Project Management {
" Plug 'tpope/vim-obsession'
" Plug 'zenbro/mirror.vim'
Plug 'editorconfig/editorconfig-vim'
" " }

" " Completion {
" "Plug 'garbas/vim-snipmate'
Plug 'honza/vim-snippets'
" " Plug 'ervandew/supertab'
Plug 'SirVer/ultisnips'
" "Plug 'Shougo/neocomplete.vim'
if has('nvim')
   Plug 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins' }
else
  " Plug 'Shougo/deoplete.nvim'
  " Plug 'roxma/nvim-yarp'
  " Plug 'roxma/vim-hug-neovim-rpc'
endif
let g:deoplete#enable_at_startup = 1
" " }

" " Plug 'scrooloose/syntastic'

" Editing {
Plug 'vim-scripts/matchit.zip'
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-abolish'
Plug 'terryma/vim-multiple-cursors'
Plug 'tpope/vim-surround'
Plug 'Raimondi/delimitMate'
Plug 'tpope/vim-commentary'
Plug 'scrooloose/nerdcommenter'
Plug 'sjl/gundo.vim'
Plug 'AndrewRadev/sideways.vim' "reorder arguments and list elements
Plug 'tek/vim-fieldtrip' "submode interface to sideways
Plug 'triglav/vim-visual-increment' "increments numbers in visual mode
Plug 'tpope/vim-sleuth'        " Heuristically set shiftwidth and}}
          " " expandtab for buffer }}
" }
" To here

" Motion {
" Plug 'Lokaltog/vim-easymotion'
" Plug 't9md/vim-smalls'
" }


" Buffer/file navigation {
Plug 'scrooloose/nerdtree'
Plug 'dbakker/vim-projectroot'
Plug 'kien/ctrlp.vim'
Plug 'jlanzarotta/bufexplorer'
Plug 'dockyard/vim-easydir'
Plug 'junegunn/fzf'
" "Plug 'Shougo/unite.vim'
" "Plug 'fholgado/minibufexpl.vim'
" }

" " Buffer/file management {
Plug 'danro/rename.vim'
Plug 'tpope/vim-eunuch'
" " }

" " UI {
Plug 'justincampbell/vim-eighties'
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'airblade/vim-gitgutter'
Plug 'gorodinskiy/vim-coloresque'
" " Plug 'tpope/vim-scriptease'
" " Plug 'colwem/vim-ctrlspace'
" "Plug 'myusuf3/numbers.vim'
" "Plug 'html_autoclosetag.vim'
" " }

" " Alignment {
Plug 'junegunn/vim-easy-align'
Plug 'godlygeek/tabular'
Plug 'nathanaelkane/vim-indent-guides'
" " Plug 'vim-scripts/Align'
" "}

" " search {
Plug 'rking/ag.vim'
Plug 'brooth/far.vim'
" "makes s like f but uses 2 chars 
" " Plug 'goldfeld/vim-seek' 
" "}

" " Tags {
" Plug 'majutsushi/tagbar'
" Plug 'xolox/vim-easytags'
" " }

" " Productivity {
" "Plug 'itchyny/calendar.vim'
" "Plug 'vimoutliner/vimoutliner'
" "Plug 'edthedev/minion'
" "}

" " Marks {
" "Plug 'jacquesbh/vim-showmarks'
" "Plug 'kshenoy/vim-signature'
" "}

" " Misc {
" Plug 'xolox/vim-misc'
" "Plug 'vim-scripts/YankRing.vim'
" "Plug 'xolox/vim-shell'
" "}

" " tech specific {

" " haskell {
" " Plug 'Twinside/vim-haskellConceal'
" " }

" " css {
" " Plug 'hail2u/vim-css3-syntax'
" " Plug 'groenewege/vim-less'
" " Plug 'cakebaker/scss-syntax.vim'
Plug 'wavded/vim-stylus'
" " Plug 'vim-scripts/css_color.vim'
" " Plug 'skammer/vim-css-color'
" "}

" " git {
" " Plug 'gregsexton/gitv'
Plug 'tpope/vim-fugitive'
Plug 'pgr0ss/vim-github-url'
" "}

" " javascript {
Plug 'mxw/vim-jsx'
Plug 'pangloss/vim-javascript'
Plug 'jbgutierrez/vim-babel'
" " Plug 'lambdatoast/elm.vim'
Plug 'elmcast/elm-vim'
" " Plug 'jelera/vim-javascript-syntax'
Plug 'vim-scripts/JavaScript-Indent'
" " Plug 'othree/javascript-libraries-syntax.vim'
" " }

" " Latex {
" "Plug 'latex-mik.vim'
" " probably doesn't work with miktex right. 
" "Plug 'LaTeX-Box-Team/LaTeX-Box'  
" "Plug 'git://git.code.sf.net/p/vim-latex/vim-latex'
" "Plug 'coot/atp_vim'
" " }

" " Node {
" " Plug 'marijnh/tern_for_vim'
" Plug 'digitaltoad/vim-pug'
" " Plug 'kchmck/vim-coffee-script'
" "}

" " Prose {
" " Plug 'reedes/vim-litecorrect'
" " Plug 'reedes/vim-textobj-sentence'
" " Plug 'reedes/vim-textobj-quote'
" " Plug 'reedes/vim-wordy'
" " " Plug 'kana/vim-textobject-user'
" " Plug 'reedes/vim-lexical'
" " Plug 'honza/writer.vim'
" " Plug 'mikewest/vimroom'
" " }

" " Python {
Plug 'numirias/semshi', {'do': ':UpdateRemotePlugins'}
" " Plug 'klen/python-mode'
" "Plug 'fs111/pydoc.vim'
" "Plug 'sontek/rope-vim'
" "Plug 'andviro/flake8-vim'
" "Plug 'davidhalter/jedi-vim'
" "}

" " sql {
" " Plug 'vim-scripts/SQLUtilities'
" "}

" " Language Pack {
" " Plug 'sheerun/vim-polyglot'
" "}
" " }

" elm {
" Plug 'elmcast/elm-vim'
" }

" " organization/notes {
Plug 'vimwiki/vimwiki'
" Plug 'xolox/vim-notes'
" " }

" " learning {
" " Plug 'fmoralesc/vim-tutor-mode'
" " Plug 'takac/vim-hardtime'
" " }

" rust {
Plug 'rust-lang/rust.vim'
" }

" " unsetup {
" "
call plug#end()            " required
" filetype plugin indent on    " required

" }
