" Modeline and Notes {
" vim: set sw=4 ts=4 sts=4 et tw=78 foldmarker={,} foldlevel=0 foldmethod=marker spell:
"
" }

" Environment {

    " Basics {
        set nocompatible        " Must be first line
        set background=dark     " Assume a dark background
        set noshellslash
    " }

    " Windows Compatible {
        " On Windows, also use '.vim' instead of 'vimfiles'; this makes synchronization
        " across (heterogeneous) systems easier.
        if has('win32') || has('win64')
          "set runtimepath=$HOME/.vim,$VIM/vimfiles,$VIMRUNTIME,$VIM/vimfiles/after,$HOME/.vim/after

          " Be nice and check for multi_byte even if the config requires
          " multi_byte support most of the time
          if has("multi_byte")
            " Windows cmd.exe still uses cp850. If Windows ever moved to
            " Powershell as the primary terminal, this would be utf-8
            set termencoding=cp850
            " Let Vim use utf-8 internally, because many scripts require this
            set encoding=utf-8
            setglobal fileencoding=utf-8
            " Windows has traditionally used cp1252, so it's probably wise to
            " fallback into cp1252 instead of eg. iso-8859-15.
            " Newer Windows files might contain utf-8 or utf-16 LE so we might
            " want to try them first.
            set fileencodings=ucs-bom,utf-8,utf-16le,cp1252,iso-8859-15
          endif
        endif
    " }

    " Setup Bundle Support {
        " The next three lines ensure that the ~/.vim/bundle/ system works
        filetype off
        set rtp+=$HOME/vimfiles/bundle/vundle/
        call vundle#rc()
    " }

    "" Add an UnBundle command {
    "function! UnBundle(arg, ...)
    "  let bundle = vundle#config#init_bundle(a:arg, a:000)
    "  call filter(g:bundles, 'v:val["name_spec"] != "' . a:arg . '"')
    "endfunction

    "com! -nargs=+         UnBundle
    "\ call UnBundle(<args>)
    "" }

" }

" Bundles {

    Bundle 'othree/html5.vim'

    " Deps {
        Bundle 'gmarik/vundle'
        Bundle 'MarcWeber/vim-addon-mw-utils'
        Bundle 'tomtom/tlib_vim'
        Bundle 'mileszs/ack.vim'
        if executable('ag')
            Bundle 'mileszs/ack.vim'
            let g:ackprg = 'ag --nogroup --nocolor --column --smart-case'
        elseif executable('ack-grep')
            let g:ackprg="ack-grep -H --nocolor --nogroup --column"
            Bundle 'mileszs/ack.vim'
        elseif executable('ack')
            Bundle 'mileszs/ack.vim'
        endif
    " }

    " stuff from before using vundle: ragtag, scratch, snipMate, surround

    "Bundle 'tpope/vim-dispatch'
    "Bundle 'plasticboy/vim-markdown'
    "Bundle 'suan/vim-instant-markdown'
    Bundle 'vim-pandoc/vim-pandoc'

    " Colorscheme {
    "Bundle 'altercation/vim-colors-solarized'
        Bundle 'tomasr/molokai'
        Bundle 'reedes/vim-colors-pencil'
    " }

    " Completion {
        "Bundle 'garbas/vim-snipmate'
        Bundle 'honza/vim-snippets'
        Bundle 'ervandew/supertab'
        Bundle 'SirVer/ultisnips'
        "Bundle 'Shougo/neocomplete.vim'
        "Bundle 'Valloric/YouCompleteMe' "Not easy to get working on windows
    " }

    Bundle 'matchit.zip'
    Bundle 'tpope/vim-repeat'
    Bundle 'scrooloose/syntastic'
    Bundle 'Lokaltog/vim-easymotion'

    " Editing {
        Bundle 'terryma/vim-multiple-cursors'
        Bundle 'tpope/vim-surround'
    " }

    " Writing {
        Bundle 'reedes/vim-litecorrect'
        Bundle 'reedes/vim-textobj-sentence'
        Bundle 'reedes/vim-textobj-quote'
        Bundle 'reedes/vim-wordy'
        " Bundle 'kana/vim-textobject-user'
        Bundle 'reedes/vim-lexical'
        Bundle 'honza/writer.vim'
        Bundle 'mikewest/vimroom'
    " }
        
    " Buffer/file navigation {
        Bundle 'scrooloose/nerdtree'
        Bundle 'dbakker/vim-projectroot'
        Bundle 'kien/ctrlp.vim'
        "Bundle 'Shougo/unite.vim'
        "Bundle 'fholgado/minibufexpl.vim'
        Bundle 'dockyard/vim-easydir'
    " }

    Bundle 'tpope/vim-scriptease'
    Bundle 'tpope/vim-obsession'
    Bundle 'bling/vim-airline'
    "Bundle 'myusuf3/numbers.vim'
    "Bundle 'airblade/vim-gitgutter'
    Bundle 'scrooloose/nerdcommenter'
    Bundle 'gorodinskiy/vim-coloresque'
    ""Bundle 'html_autoclosetag.vim'
    Bundle 'vim-scripts/css_color.vim'

    " Latex {
        "Bundle 'latex-mik.vim'
        " probably doesn't work with miktex right. 
        "Bundle 'LaTeX-Box-Team/LaTeX-Box'  
        "Bundle 'git://git.code.sf.net/p/vim-latex/vim-latex'
        "Bundle 'coot/atp_vim'
    " }

    " git {
        "Bundle 'gregsexton/gitv'
        Bundle 'tpope/vim-fugitive'
    "}

    " search {
        Bundle 'rking/ag.vim'
        "makes s like f but uses 2 chars 
        Bundle 'goldfeld/vim-seek' 
    "}

    Bundle 'sjl/gundo.vim'

    " Python {
        Bundle 'klen/python-mode'
        "Bundle 'fs111/pydoc.vim'
        "Bundle 'sontek/rope-vim'
        "Bundle 'andviro/flake8-vim'
        "Bundle 'davidhalter/jedi-vim'
    "}

    " Tags {
        Bundle 'majutsushi/tagbar'
        "Bundle 'xolox/vim-easytags'
    "}

    " Productivity {
        "Bundle 'itchyny/calendar.vim'
        "Bundle 'vimoutliner/vimoutliner'
        "Bundle 'fmoralesc/vim-pad'
        Bundle 'edthedev/minion'
    "}

    " Marks {
        "Bundle 'jacquesbh/vim-showmarks'
        Bundle 'kshenoy/vim-signature'
    "}

    " Misc {
        "Bundle 'vim-scripts/YankRing.vim'
        "Bundle 'xolox/vim-shell'
        "Bundle 'xolox/vim-misc'
    "}

    " Node {
        Bundle 'marijnh/tern_for_vim'
        Bundle 'digitaltoad/vim-jade'
        Bundle 'kchmck/vim-coffee-script'
    "}

    " sql {
        Bundle 'vim-scripts/SQLUtilities'
    "}

    " Alignment {
        Bundle 'junegunn/vim-easy-align'
        Bundle 'vim-scripts/Align'
        Bundle 'godlygeek/tabular'
    "}
    
    " css {
        Bundle 'groenewege/vim-less'
    "}

"}
